plugins {
    id 'java'
    id 'java-library'
    id 'idea'

    id "application"
    id 'org.openjfx.javafxplugin' version '0.0.9'

    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

ext {
    jsr305 = 'com.google.code.findbugs:jsr305:3.0.2'
    javaxInject = 'javax.inject:javax.inject:1'
    jSerialComm = 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    javaVersion = JavaVersion.VERSION_15
}

wrapper {
    description 'Setup the Gradle wrapper'
    gradleVersion = "6.7"
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

allprojects {
    group = 'com.ak'
    version = '2020.11.05'
    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = true
        }
    }

    sourceSets {
        main.output.resourcesDir = main.java.outputDir
    }

    apply plugin: 'java'
    apply plugin: 'java-library'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        jcenter()
    }

    dependencies {
        implementation jsr305
    }

    test {
        useJUnitPlatform()
    }
}

dependencies {
    implementation javaxInject
    implementation jSerialComm
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

configurations {
    all {
        exclude group: 'jakarta.annotation', module: 'jakarta.annotation-api'
    }
}

processResources {
    expand(project.properties)
}

javafx {
    version = '15'
    modules = ['javafx.controls', 'javafx.fxml']
}

mainClassName = "com.ak.fx.desktop.FxApplication"